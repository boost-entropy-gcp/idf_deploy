name: 'TF Science Platform DEV NFS'

on:
  push:
    paths:
    - 'filestore/deployments/science-platform/kustomize.yaml'
    branches:
    - master
  pull_request:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1    
  GKE_ZONE: us-central1-c   
  DEPLOYMENT_NAME: gke-test
  IMAGE: static-site

jobs:
  build:
    name: 'NFS'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./environment/deployments/science-platform/gke

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Gcloud CLI setup
    - name: GCP login
      uses: google-github-actions/setup-gcloud@master
      with:
        version: '319.0.0'
        service_account_key: ${{ secrets.GOOGLE_CREDENTIALS }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        export_default_credentials: true

    # Get the GKE credentials so we can deploy to the cluster
    - run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Validate the kubernetes manifest from kustomize
    - name: Validate Manifest
      run: |-
        ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
        ./kustomize build .

  build_and_deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:

    # On push to main, build or change infrastructure according to Terraform configuration files
    - name: Deploy
      run: |-
        ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide