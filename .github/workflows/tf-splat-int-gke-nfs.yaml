name: 'TF Science Platform INT GKE NFS'

on:
  pull_request:
    paths:
      - "filestore/trigger.txt"

env:
  WORKING_DIR: ./environment/deployments/science-platform/gke
  TF_CONFIG_PREFIX: science-platform/int/gke
  TF_VAR_FILE: ../env/integration-gke.tfvars
  GKE_PROJECT_ID: science-platform-int-dc5d
  YQ_VERSION: 3.4.1

jobs:
  terraform_plan:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./environment/deployments/science-platform/gke

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Gcloud CLI setup
    - name: GCP login
      uses: google-github-actions/setup-gcloud@master
      with:
        version: '319.0.0'
        service_account_key: ${{ secrets.GOOGLE_CREDENTIALS }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        export_default_credentials: true

    # Setup Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.12.29

     # Checks for proper formatting
    - name: Terraform Fmt
      id: fmt
      run: terraform fmt

     # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      id: init
      run: terraform init -backend-config=bucket=${{ secrets.TERRAFORM_STATE_BUCKET }} -backend-config=prefix=${TF_CONFIG_PREFIX}

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Validate
      id: validate
      run: terraform validate

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      id: plan
      run: terraform plan -var-file=${TF_VAR_FILE} -no-color

    # Set up yq
    - name: Set up yq
      run: |-
        wget https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64 -O yq
        chmod +x yq

    # Update Filestore Address Persistent Volume Patch
    - name: Update Filestore Address
      run: |-
        terraform output filestore_ip_address | ./yq w -i /kubernetes-manifests/overlays/dev/nfs.ip.patch.yaml [].value