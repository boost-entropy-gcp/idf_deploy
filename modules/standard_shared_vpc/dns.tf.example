
# -----------------------------------------
# Default DNS Policy
# A policy is a collection of DNS rules applied
# to one or more VPC resources
#
# Setting `enable_inbound_forwarding` to true
# allows networks bound to this policy to receive
# DNS queries sent by VMs over VPN.
# -----------------------------------------

resource "google_dns_policy" "default_policy" {
  provider                  = google-beta
  project                   = var.project_id
  name                      = "default-policy"
  enable_inbound_forwarding = var.dns_enable_inbound_forwarding
  enable_logging            = var.dns_enable_logging
  networks {
    network_url = module.main.network_self_link
  }
}

# -----------------------------------------
# DNS Forwarding Zone
# With Cloud DNS, to access private records hosted on 
# corporate DNS servers on-premises, you can only use forwarding zones.
# -----------------------------------------

module "dns_forwarding_zone" {
  source                             = "terraform-google-modules/cloud-dns/google"
  version                            = "~> 3.0"
  project_id                         = var.project_id
  type                               = "forwarding"
  name                               = var.fwd_name
  domain                             = var.fwd_domain
  private_visibility_config_networks = [module.main.network_self_link]
  target_name_server_addresses       = var.target_name_server_addresses
}

# -----------------------------------------
# Authoritative Private Zone
# -----------------------------------------

module "authoritative_private_zone" {
  source                             = "terraform-google-modules/cloud-dns/google"
  version                            = "~> 3.0"
  project_id                         = var.project_id
  type                               = "private"
  name                               = var.authoritative_name
  domain                             = var.authoritative_domain
  description                        = "Private authoritative zone"
  private_visibility_config_networks = [module.main.network_self_link]
  recordsets = [
    {
      name = "ns"
      type = "A"
      ttl  = 300
      records = [
        "127.0.0.1",
      ]
    },
    {
      name = ""
      type = "NS"
      ttl  = 300
      records = [
        "ns.${var.authoritative_domain}",
      ]
    },
    {
      name = "localhost"
      type = "A"
      ttl  = 300
      records = [
        "127.0.0.1",
      ]
    },
  ]
}

/******************************************
  Private Google APIs DNS Zone & records.

  Private Google Access for on-premises hosts to
  connect to Google APIs and services by
  routing through VPN tunnel or interconnect.

  Additional on-prem config is documented
  here: https://cloud.google.com/vpc/docs/configure-private-google-access-hybrid
 *****************************************/

module "private_googleapis" {
  source      = "terraform-google-modules/cloud-dns/google"
  version     = "~> 3.0"
  project_id  = var.project_id
  type        = "private"
  name        = "private-googleapis"
  domain      = "googleapis.com."
  description = "Private DNS zone to configure private.googleapis.com"

  private_visibility_config_networks = [
    module.main.network_self_link
  ]

  recordsets = [
    {
      name    = "*"
      type    = "CNAME"
      ttl     = 300
      records = ["private.googleapis.com."]
    },
    {
      name    = "private"
      type    = "A"
      ttl     = 300
      records = ["199.36.153.8", "199.36.153.9", "199.36.153.10", "199.36.153.11"]
    },
  ]
}

/******************************************
  Private GCR DNS Zone & records.
 *****************************************/

module "private_gcr" {
  source      = "terraform-google-modules/cloud-dns/google"
  version     = "~> 3.0"
  project_id  = var.project_id
  type        = "private"
  name        = "private-gcr"
  domain      = "gcr.io."
  description = "Private DNS zone to configure gcr.io"

  private_visibility_config_networks = [
    module.main.network_self_link
  ]

  recordsets = [
    {
      name    = "*"
      type    = "CNAME"
      ttl     = 300
      records = ["gcr.io."]
    },
    {
      name    = ""
      type    = "A"
      ttl     = 300
      records = ["199.36.153.8", "199.36.153.9", "199.36.153.10", "199.36.153.11"]
    },
  ]
}